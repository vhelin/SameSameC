
  .SECTION "main" FREE
    ; =================================================================
    ; ../test2.blb:2: void main(void) {
    ; =================================================================
    main:
      ; A  - tmp
      ; BC - tmp
      ; DE - frame pointer
      ; HL - tmp
      ; SP - stack pointer
      ; IX - tmp
      ; IY - tmp
      ; =================================================================
      ; ../test2.blb:4: int8 array[] = { 0, 1, 2, 3, 4, 5, 6, 7 };
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: variable "array" size 8 offset -11 type n
      ; -----------------------------------------------------------------
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[0.uint8 (uint8)] := 0.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,0
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),0
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[1.uint8 (uint8)] := 1.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,1
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),1
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[2.uint8 (uint8)] := 2.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,2
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),2
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[3.uint8 (uint8)] := 3.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,3
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),3
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[4.uint8 (uint8)] := 4.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,4
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),4
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[5.uint8 (uint8)] := 5.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,5
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),5
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[6.uint8 (uint8)] := 6.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,6
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),6
      ; -----------------------------------------------------------------
      ; TAC: array.int8 (int8)[7.uint8 (uint8)] := 7.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  BC,7
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      ADD IY,BC
      LD  (IY+0),7
      ; =================================================================
      ; ../test2.blb:5: int16 result = sum(array[1], 2);
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: variable "result" size 2 offset -13 type n
      ; -----------------------------------------------------------------
      ; -----------------------------------------------------------------
      ; TAC: r0.uint8 (int8) := array.int8 (int8)[1.uint8 (uint8)]
      ; -----------------------------------------------------------------
      ; offset -11
      LD  IY,-11
      ADD IY,DE
      LD  BC,1
      ADD IY,BC
      LD  L,(IY+0)
      ; offset -14
      LD  IX,-14
      ADD IX,DE
      LD  (IX+0),L
      ; -----------------------------------------------------------------
      ; TAC: r1.uint8 (uint8) := 2.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -15
      LD  IX,-15
      ADD IX,DE
      LD  (IX+0),2
      ; -----------------------------------------------------------------
      ; TAC: result.int16 (int16) := sum(r0.uint8 (uint8), r1.uint8 (uint8))
      ; -----------------------------------------------------------------
      LD  B,D
      LD  C,E
      LD  HL,0
      ADD HL,SP
      LD  D,H
      LD  E,L
      LD  IX,0
      ADD IX,DE
      LD  HL,_return_1
      LD  (IX-1),L
      LD  (IX+0),H
      LD  (IX-3),C
      LD  (IX-2),B
      LD  IY,0
      ADD IY,BC
      LD  L,(IY-14)
      LD  (IX-5),L
      LD  L,(IY-15)
      LD  (IX-6),L
      LD  IX,-7
      ADD IX,DE
      LD  SP,IX
      JP  sum
    _return_1:
      LD  H,D
      LD  L,E
      LD  SP,HL
      LD  IX,0
      ADD IX,DE
      LD  L,(IX-4)
      ; sign extend 8-bit L -> 16-bit HL
      LD  A,L
      ADD A,A  ; sign bit of A into carry
      SBC A,A  ; A = 0 if carry == 0, $FF otherwise
      LD  H,A  ; now HL is sign extended L
      LD  E,(IX-3)
      LD  D,(IX-2)
      ; offset -13
      LD  IY,-13
      ADD IY,DE
      LD  (IY+0),L
      LD  (IY+1),H
      ; =================================================================
      ; ../test2.blb:6: result++;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: result.int16 (int16) := result.int16 (int16) + 1.uint8 (int16)
      ; -----------------------------------------------------------------
      ; offset -13
      LD  IX,-13
      ADD IX,DE
      LD  L,(IX+0)
      LD  H,(IX+1)
      INC HL
      ; offset -13
      LD  IX,-13
      ADD IX,DE
      LD  (IX+0),L
      LD  (IX+1),H
      ; -----------------------------------------------------------------
      ; TAC: return
      ; -----------------------------------------------------------------
      LD  IX,0
      ADD IX,DE
      LD  L,(IX-1)
      LD  H,(IX+0)
      JP  (HL)
  .ENDS

  .SECTION "mainmain" FREE
    ; =================================================================
    ; INTERNAL
    ; =================================================================
    mainmain:
      ; A  - tmp
      ; BC - tmp
      ; DE - frame pointer
      ; HL - tmp
      ; SP - stack pointer
      ; IX - tmp
      ; IY - tmp
      ; -----------------------------------------------------------------
      ; TAC: main()
      ; -----------------------------------------------------------------
      LD  B,D
      LD  C,E
      LD  HL,0
      ADD HL,SP
      LD  D,H
      LD  E,L
      LD  IX,0
      ADD IX,DE
      LD  HL,_return_2
      LD  (IX-1),L
      LD  (IX+0),H
      LD  (IX-3),C
      LD  (IX-2),B
      LD  IX,-16
      ADD IX,DE
      LD  SP,IX
      JP  main
    _return_2:
      LD  H,D
      LD  L,E
      LD  SP,HL
      LD  IX,0
      ADD IX,DE
      LD  E,(IX-3)
      LD  D,(IX-2)
      ; -----------------------------------------------------------------
      ; TAC: _label_1:
      ; -----------------------------------------------------------------
    _label_1:
      ; -----------------------------------------------------------------
      ; TAC: jmp _label_1
      ; -----------------------------------------------------------------
      JP  _label_1
  .ENDS

