
  .RAMSECTION "global_variables_test2_ram" FREE
    g_color     DB
    g_data_size DW
    g_hello     DSB 6
    g_things    DSB 10
    g_data      DSB 5
  .ENDS

  .SECTION "global_variables_test2_rom" FREE
    global_variable_rom_g_color:
      .DB 0
    global_variable_rom_g_data_size:
      .DW 3
    global_variable_rom_g_hello:
      .DB 104, 101, 108, 108, 111, 0
    global_variable_rom_g_things:
      .DB 255, 109, 111, 105, 33, 0, 104, 105, 33, 0
    global_variable_rom_g_data:
      .DB 49, 50, 51, 2
  .ENDS

  .SECTION "global_variables_test2_init" FREE
    global_variables_test2_init:
      ; copy all fully initialized global variables in a single call
      LD  HL,g_color
      LD  DE,global_variable_rom_g_color
      LD  BC,19
      CALL _copy_bytes
      ; copy partially initialized global variable "g_data"
      LD  HL,g_data
      LD  DE,global_variable_rom_g_data
      LD  BC,4
      CALL _copy_bytes
      RET

    _copy_bytes:
      LD  A,(DE)
      LD  (HL),A
      INC DE
      INC HL
      DEC BC
      LD  A,B
      OR  A,C
      JR  NZ,_copy_bytes
      RET
  .ENDS

  .SECTION "main" FREE
    ; =================================================================
    ; ../test2.blb:7: void main(void) {
    ; =================================================================
    main:
      ; A  - tmp
      ; BC - tmp
      ; DE - frame pointer
      ; HL - tmp
      ; SP - stack pointer
      ; IX - tmp
      ; IY - tmp
      ; =================================================================
      ; ../test2.blb:12: while (1) {
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: variable "i" size 1 offset -4 type n
      ; -----------------------------------------------------------------
      ; -----------------------------------------------------------------
      ; TAC: _label_1:
      ; -----------------------------------------------------------------
    _label_1:
      ; =================================================================
      ; ../test2.blb:13: __z80_out[0xBF] = 0x00;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: __z80_out.uint8 (uint8)[191.uint8 (uint8)] := 0.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  A,0
      OUT ($BF),A
      ; =================================================================
      ; ../test2.blb:14: __z80_out[0xBF] = 0xC0;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: __z80_out.uint8 (uint8)[191.uint8 (uint8)] := 192.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  A,192
      OUT ($BF),A
      ; =================================================================
      ; ../test2.blb:15: for (i = 0; i < 32; i++) {
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: i.uint8 (uint8) := 0.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  (IX+0),0
      ; -----------------------------------------------------------------
      ; TAC: _label_3:
      ; -----------------------------------------------------------------
    _label_3:
      ; -----------------------------------------------------------------
      ; TAC: r0.uint8 (uint8) := 0.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -5
      LD  IX,-5
      ADD IX,DE
      LD  (IX+0),0
      ; -----------------------------------------------------------------
      ; TAC: if i.uint8 (uint8) < 32.uint8 (uint8) jmp _label_6
      ; -----------------------------------------------------------------
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  A,(IX+0)
      LD  B,32
      SUB A,B
      JP  C,_label_6
      ; -----------------------------------------------------------------
      ; TAC: jmp _label_7
      ; -----------------------------------------------------------------
      JP  _label_7
      ; -----------------------------------------------------------------
      ; TAC: _label_6:
      ; -----------------------------------------------------------------
    _label_6:
      ; -----------------------------------------------------------------
      ; TAC: r0.uint8 (uint8) := 1.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -5
      LD  IX,-5
      ADD IX,DE
      LD  (IX+0),1
      ; -----------------------------------------------------------------
      ; TAC: _label_7:
      ; -----------------------------------------------------------------
    _label_7:
      ; -----------------------------------------------------------------
      ; TAC: if r0.uint8 (uint8) == 0.uint8 (uint8) jmp _label_5
      ; -----------------------------------------------------------------
      ; offset -5
      LD  IX,-5
      ADD IX,DE
      LD  A,(IX+0)
      LD  B,0
      SUB A,B
      JP  Z,_label_5
      ; =================================================================
      ; ../test2.blb:16: __z80_out[0xBE] = g_color;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: __z80_out.uint8 (uint8)[190.uint8 (uint8)] := g_color.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  IX,g_color
      LD  A,(IX+0)
      OUT ($BE),A
      ; -----------------------------------------------------------------
      ; TAC: _label_4:
      ; -----------------------------------------------------------------
    _label_4:
      ; -----------------------------------------------------------------
      ; TAC: i.uint8 (uint8) := i.uint8 (uint8) + 1.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  A,(IX+0)
      INC A
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  (IX+0),A
      ; -----------------------------------------------------------------
      ; TAC: jmp _label_3
      ; -----------------------------------------------------------------
      JP  _label_3
      ; -----------------------------------------------------------------
      ; TAC: _label_5:
      ; -----------------------------------------------------------------
    _label_5:
      ; =================================================================
      ; ../test2.blb:18: g_color--;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: g_color.uint8 (uint8) := g_color.uint8 (uint8) - 1.uint8 (uint8)
      ; -----------------------------------------------------------------
      LD  IX,g_color
      LD  A,(IX+0)
      DEC A
      LD  IX,g_color
      LD  (IX+0),A
      ; =================================================================
      ; ../test2.blb:19: i = 1 + i;
      ; =================================================================
      ; -----------------------------------------------------------------
      ; TAC: i.uint8 (uint8) := i.uint8 (uint8) + 1.uint8 (uint8)
      ; -----------------------------------------------------------------
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  A,(IX+0)
      INC A
      ; offset -4
      LD  IX,-4
      ADD IX,DE
      LD  (IX+0),A
      ; -----------------------------------------------------------------
      ; TAC: jmp _label_1
      ; -----------------------------------------------------------------
      JP  _label_1
  .ENDS

  .SECTION "mainmain" FREE
    ; =================================================================
    ; INTERNAL
    ; =================================================================
    mainmain:
      ; A  - tmp
      ; BC - tmp
      ; DE - frame pointer
      ; HL - tmp
      ; SP - stack pointer
      ; IX - tmp
      ; IY - tmp
      ; -----------------------------------------------------------------
      ; TAC: main()
      ; -----------------------------------------------------------------
      LD  B,D
      LD  C,E
      LD  HL,0
      ADD HL,SP
      LD  D,H
      LD  E,L
      LD  IX,0
      ADD IX,DE
      LD  HL,_return_1
      LD  (IX+0),L
      LD  (IX-1),H
      LD  (IX-2),C
      LD  (IX-3),B
      LD  IX,-6
      ADD IX,DE
      LD  SP,IX
      JP  main
    _return_1:
      LD  H,D
      LD  L,E
      LD  SP,HL
      LD  IX,0
      ADD IX,DE
      LD  E,(IX-2)
      LD  D,(IX-3)
      ; -----------------------------------------------------------------
      ; TAC: _label_8:
      ; -----------------------------------------------------------------
    _label_8:
      ; -----------------------------------------------------------------
      ; TAC: jmp _label_8
      ; -----------------------------------------------------------------
      JP  _label_8
  .ENDS

